const e=JSON.parse('{"key":"v-8cbb0972","path":"/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html","title":"二分查找","lang":"zh-CN","frontmatter":{"title":"二分查找","date":"2022-08-21T23:53:25.000Z","category":["笔记"],"tag":["算法"],"summary":"二分查找的细节（重点） 二分的本质是 边界，其核心在于找到某种性质可以将区间一分为二。 模板 使用模板时，先通过 check 函数找到等于 mid 的边界，然后分情况判断： 若 l = mid，则对应 r = mid - 1，同时计算 mid 时需要 + 1；; 若 r = mid，则对应 l = mid + 1。; \\" 说明\\" \\"\\" \\" 为什么计算 mid","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html"}],["meta",{"property":"og:site_name","content":"Hush-note"}],["meta",{"property":"og:title","content":"二分查找"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2022-08-21T23:53:25.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://mister-hope.github.io/en/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html"}]]},"excerpt":"","headers":[{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]},{"level":2,"title":"边界处理","slug":"边界处理","link":"#边界处理","children":[]}],"git":{},"readingTime":{"minutes":1.21,"words":363},"copyright":"著作权归所有\\n原文链接：https://mister-hope.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html","filePathRelative":"demo/02.常用算法/02.二分查找.md","localizedDate":"2022年8月22日"}');export{e as data};
