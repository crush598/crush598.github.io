const n=JSON.parse('{"key":"v-0c70e193","path":"/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/01.%20%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html","title":"十大排序算法","lang":"zh-CN","frontmatter":{"title":"十大排序算法","date":"2022-10-19T18:41:32.000Z","category":["笔记"],"tag":["算法"],"description":"排序算法 冒泡排序 「冒泡排序法」通过相邻元素之间的比较与交换，使值较小的元素逐步从后面移到前面，值较大的元素从前面移到后面。 calss Solution: def bubble_sort(self, arr): # 第 i 趟排序 for i in range(len(arr)): # 从 第 1 个元素到第 len(arr) - 1 - i 个元素开始，相邻两个元素比较 for j in range(len(arr) - 1 - i): # 相邻两个元素进行比较，如果前者大于后者，则交换位置 if arr[j] &gt; arr[j + 1]: arr[j], arr[j + 1] = arr[j + 1], arr[j] \\treturn arr def sort_array(self, nums): return self.bubble_sort(nums)","head":[["meta",{"property":"og:url","content":"https://crush598.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/01.%20%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Hush"}],["meta",{"property":"og:title","content":"十大排序算法"}],["meta",{"property":"og:description","content":"排序算法 冒泡排序 「冒泡排序法」通过相邻元素之间的比较与交换，使值较小的元素逐步从后面移到前面，值较大的元素从前面移到后面。 calss Solution: def bubble_sort(self, arr): # 第 i 趟排序 for i in range(len(arr)): # 从 第 1 个元素到第 len(arr) - 1 - i 个元素开始，相邻两个元素比较 for j in range(len(arr) - 1 - i): # 相邻两个元素进行比较，如果前者大于后者，则交换位置 if arr[j] &gt; arr[j + 1]: arr[j], arr[j + 1] = arr[j + 1], arr[j] \\treturn arr def sort_array(self, nums): return self.bubble_sort(nums)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2022-10-19T18:41:32.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://crush598.github.io/en/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/01.%20%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html"}]]},"headers":[{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":2,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":2,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":2,"title":"希尔排序","slug":"希尔排序","link":"#希尔排序","children":[]},{"level":2,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":2,"title":"堆排序","slug":"堆排序","link":"#堆排序","children":[]},{"level":2,"title":"计数排序","slug":"计数排序","link":"#计数排序","children":[]},{"level":2,"title":"桶排序","slug":"桶排序","link":"#桶排序","children":[]},{"level":2,"title":"基数排序","slug":"基数排序","link":"#基数排序","children":[]},{"level":2,"title":"稳定性和复杂度","slug":"稳定性和复杂度","link":"#稳定性和复杂度","children":[]}],"git":{},"readingTime":{"minutes":4.8,"words":1441},"localizedDate":"2022年10月20日","filePathRelative":"demo/02.常用算法/01. 十大排序算法.md","excerpt":"<h1> 排序算法</h1>\\n<h2> 冒泡排序</h2>\\n<p>「冒泡排序法」通过相邻元素之间的比较与交换，使值较小的元素逐步从后面移到前面，值较大的元素从前面移到后面。</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>calss Solution<span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">bubble_sort</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># 第 i 趟排序</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token comment\\"># 从 第 1 个元素到第 len(arr) - 1 - i 个元素开始，相邻两个元素比较</span>\\n            <span class=\\"token keyword\\">for</span> j <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token comment\\"># 相邻两个元素进行比较，如果前者大于后者，则交换位置</span>\\n                <span class=\\"token keyword\\">if</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n                    arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span>\\n    \\t<span class=\\"token keyword\\">return</span> arr\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">sort_array</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> nums<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>bubble_sort<span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">)</span>\\n    \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Hush"},"autoDesc":true}');export{n as data};
