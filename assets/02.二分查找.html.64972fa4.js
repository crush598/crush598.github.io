import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.7bc693ea.js";const t={},e=p(`<h1 id="二分查找的细节-重点" tabindex="-1"><a class="header-anchor" href="#二分查找的细节-重点" aria-hidden="true">#</a> 二分查找的细节（重点）</h1><p>二分的本质是 <strong>边界</strong>，其核心在于找到某种性质可以将区间一分为二。</p><h2 id="模板" tabindex="-1"><a class="header-anchor" href="#模板" aria-hidden="true">#</a> 模板</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">//</span> 区间 <span class="token punctuation">[</span>l<span class="token punctuation">,</span> r<span class="token punctuation">]</span> 被划分成 <span class="token punctuation">[</span>l<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> 和 <span class="token punctuation">[</span>mid<span class="token punctuation">,</span> r<span class="token punctuation">]</span> 时使用：
bsearch<span class="token punctuation">(</span><span class="token builtin">int</span> l<span class="token punctuation">,</span> <span class="token builtin">int</span> r<span class="token punctuation">)</span><span class="token punctuation">:</span>
    l<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
    
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">:</span>
        mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
          	l <span class="token operator">=</span> mid
        <span class="token keyword">else</span> <span class="token punctuation">:</span>
          	r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
    
    <span class="token keyword">return</span> l


<span class="token operator">//</span> 检查 x 是否满足某种性质
<span class="token builtin">bool</span> check<span class="token punctuation">(</span><span class="token builtin">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">/</span><span class="token operator">*</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">*</span><span class="token operator">/</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">//</span> 区间 <span class="token punctuation">[</span>l<span class="token punctuation">,</span> r<span class="token punctuation">]</span> 被划分成 <span class="token punctuation">[</span>l<span class="token punctuation">,</span> mid<span class="token punctuation">]</span> 和 <span class="token punctuation">[</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">]</span> 时使用：
<span class="token builtin">int</span> bsearch<span class="token punctuation">(</span><span class="token builtin">int</span> l<span class="token punctuation">,</span> <span class="token builtin">int</span> r<span class="token punctuation">)</span><span class="token punctuation">:</span>
    l<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
    
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">:</span>
        mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
          	r <span class="token operator">=</span> mid
        <span class="token keyword">else</span> <span class="token punctuation">:</span>
          	l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
    
    <span class="token keyword">return</span> l


<span class="token operator">//</span> 检查 x 是否满足某种性质
<span class="token builtin">bool</span> check<span class="token punctuation">(</span><span class="token builtin">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">/</span><span class="token operator">*</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">*</span><span class="token operator">/</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用模板时，先通过 check 函数找到等于 mid 的边界，然后分情况判断：</p><ul><li><mark>若 <code>l = mid</code>，则对应 <code>r = mid - 1</code>，同时计算 mid 时需要 <code>+ 1</code>；</mark></li><li>若 <code>r = mid</code>，则对应 <code>l = mid + 1</code>。</li></ul><blockquote><p><u>说明</u></p><p>为什么计算 mid 时需要 <code>+ 1</code>？</p><p>当 <code>l = r - 1</code> 时，<code>mid = l + r &gt;&gt; 1 = l</code>，若更新语句为 <code>l = mid</code>，则区间未变化，会导致死循环，因此需要 <code>+ 1</code> 操作。</p></blockquote><h2 id="边界处理" tabindex="-1"><a class="header-anchor" href="#边界处理" aria-hidden="true">#</a> <a href="(https://leetcode.cn/problems/search-insert-position/solution/dai-ma-sui-xiang-lu-che-di-jiang-tou-er-5zs9r/)">边界处理</a></h2><ul><li><p>到底是 while(left &lt; right) 还是 while(left &lt;= right)，到底是right = middle呢，还是要right = middle - 1呢？</p><p>解决方法：循环不变量</p><p><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/二分/iShot_2022-08-14_23.18.12.png" alt="重点概况"></p></li></ul>`,10),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","02.二分查找.html.vue"]]);export{d as default};
