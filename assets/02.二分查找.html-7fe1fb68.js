const n=JSON.parse('{"key":"v-8cbb0972","path":"/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html","title":"二分查找","lang":"zh-CN","frontmatter":{"title":"二分查找","date":"2022-08-21T23:53:25.000Z","category":["笔记"],"tag":["算法"],"description":"二分查找的细节（重点） 二分的本质是 边界，其核心在于找到某种性质可以将区间一分为二。 模板 // 区间 [l, r] 被划分成 [l, mid - 1] 和 [mid, r] 时使用： bsearch(int l, int r): l, r = 0, len(nums) - 1 while (l &lt; r) : mid = l + (r - l) / 2 + 1 if (check(mid)): \\tl = mid else : \\tr = mid - 1 return l // 检查 x 是否满足某种性质 bool check(int x) {/* ... */}","head":[["meta",{"property":"og:url","content":"https://crush598.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html"}],["meta",{"property":"og:site_name","content":"Hush"}],["meta",{"property":"og:title","content":"二分查找"}],["meta",{"property":"og:description","content":"二分查找的细节（重点） 二分的本质是 边界，其核心在于找到某种性质可以将区间一分为二。 模板 // 区间 [l, r] 被划分成 [l, mid - 1] 和 [mid, r] 时使用： bsearch(int l, int r): l, r = 0, len(nums) - 1 while (l &lt; r) : mid = l + (r - l) / 2 + 1 if (check(mid)): \\tl = mid else : \\tr = mid - 1 return l // 检查 x 是否满足某种性质 bool check(int x) {/* ... */}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2022-08-21T23:53:25.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://crush598.github.io/en/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/02.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html"}]]},"headers":[{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]},{"level":2,"title":"边界处理","slug":"边界处理","link":"#边界处理","children":[]}],"git":{},"readingTime":{"minutes":1.21,"words":363},"localizedDate":"2022年8月22日","filePathRelative":"demo/02.常用算法/02.二分查找.md","excerpt":"<h1> 二分查找的细节（重点）</h1>\\n<p>二分的本质是 <strong>边界</strong>，其核心在于找到某种性质可以将区间一分为二。</p>\\n<h2> 模板</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token operator\\">//</span> 区间 <span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">]</span> 被划分成 <span class=\\"token punctuation\\">[</span>l<span class=\\"token punctuation\\">,</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> 和 <span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">]</span> 时使用：\\nbsearch<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">int</span> l<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">int</span> r<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    l<span class=\\"token punctuation\\">,</span> r <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n    \\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;</span> r<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">:</span>\\n        mid <span class=\\"token operator\\">=</span> l <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">-</span> l<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>check<span class=\\"token punctuation\\">(</span>mid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n          \\tl <span class=\\"token operator\\">=</span> mid\\n        <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">:</span>\\n          \\tr <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n    \\n    <span class=\\"token keyword\\">return</span> l\\n\\n\\n<span class=\\"token operator\\">//</span> 检查 x 是否满足某种性质\\n<span class=\\"token builtin\\">bool</span> check<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">int</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token operator\\">/</span><span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span> <span class=\\"token operator\\">*</span><span class=\\"token operator\\">/</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Hush"},"autoDesc":true}');export{n as data};
