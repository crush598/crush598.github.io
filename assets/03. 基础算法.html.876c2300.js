const e=JSON.parse('{"key":"v-e9cf601e","path":"/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/03.%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95.html","title":"基础算法","lang":"zh-CN","frontmatter":{"title":"基础算法","date":"2022-09-23T22:48:25.000Z","category":["笔记"],"tag":["算法"],"summary":"递归算法 递归算法的伪代码： 参考链接 分治算法 使用分治算法解决问题主要分为 3 个步骤： 1. 分解：把要解决的问题分解为成若干个规模较小、相对独立、与原问题形式相同的子问题。 2. 求解：递归求解各个子问题。 3. 合并：按照原问题的要求，将子问题的解逐层合并构成原问题的解。 参考链接 回溯算法 回溯算法的基本思想是：以深度优先搜索的方式，根据产生子节","head":[["meta",{"property":"og:url","content":"https://crush598.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/03.%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Hush"}],["meta",{"property":"og:title","content":"基础算法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2022-09-23T22:48:25.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://crush598.github.io/en/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/03.%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95.html"}]]},"excerpt":"","headers":[{"level":2,"title":"递归算法","slug":"递归算法","link":"#递归算法","children":[]},{"level":2,"title":"分治算法","slug":"分治算法","link":"#分治算法","children":[]},{"level":2,"title":"回溯算法","slug":"回溯算法","link":"#回溯算法","children":[]}],"git":{},"readingTime":{"minutes":1.3,"words":390},"copyright":"著作权归Hush所有\\n原文链接：https://crush598.github.io/demo/02.%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/03.%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95.html","filePathRelative":"demo/02.常用算法/03. 基础算法.md","localizedDate":"2022年9月24日"}');export{e as data};
