import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as e,f as s}from"./app.43b43675.js";const i={},t=s(`<h1 id="numpy-数据类型" tabindex="-1"><a class="header-anchor" href="#numpy-数据类型" aria-hidden="true">#</a> NumPy 数据类型</h1><h2 id="创建数组" tabindex="-1"><a class="header-anchor" href="#创建数组" aria-hidden="true">#</a> 创建数组</h2><p>首先，可以用 np.array 从 Python 列表创建数组：</p><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012118700.png" alt="iShot_2022-10-01_21.18.05" style="zoom:50%;"><p>请记住，不同于 Python 列表，NumPy 要求数组<u>必须包含同一类型的数据</u>。如果类型不匹配，NumPy 将会向上转换（如果可行）。这里整型被转换为浮点型：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token number">4.</span> <span class="token punctuation">,</span> <span class="token number">2.</span> <span class="token punctuation">,</span> <span class="token number">3.</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-本身的属性" tabindex="-1"><a class="header-anchor" href="#array-本身的属性" aria-hidden="true">#</a> array 本身的属性</h3><ul><li><mark>nidm</mark>（数组的维度）</li><li><mark>shape</mark>（数组每个维度的大小）</li><li><mark>size</mark>（数组的总大小）</li><li><mark>dtype</mark> (数组的数据类型)</li><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012126710.jpg" alt="未命名34" style="zoom:50%;"></li></ul><h3 id="初始化-array" tabindex="-1"><a class="header-anchor" href="#初始化-array" aria-hidden="true">#</a> 初始化 array</h3><ul><li><h4 id="使用ones创建全是1的数组-使用ones-like创建形状相同的数组" tabindex="-1"><a class="header-anchor" href="#使用ones创建全是1的数组-使用ones-like创建形状相同的数组" aria-hidden="true">#</a> 使用ones创建全是1的数组 ---- 使用ones_like创建形状相同的数组</h4></li><li><h4 id="使用zeros创建全是0的数组-使用zeros-like创建形状相同的数组" tabindex="-1"><a class="header-anchor" href="#使用zeros创建全是0的数组-使用zeros-like创建形状相同的数组" aria-hidden="true">#</a> 使用zeros创建全是0的数组 ---- 使用zeros_like创建形状相同的数组</h4></li><li><h4 id="使用full创建指定值的数组-使用full-like创建形状相同的数组" tabindex="-1"><a class="header-anchor" href="#使用full创建指定值的数组-使用full-like创建形状相同的数组" aria-hidden="true">#</a> 使用full创建指定值的数组 ---- 使用full_like创建形状相同的数组</h4></li><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012130460.png" alt="iShot_2022-10-01_21.29.23" style="zoom:50%;"></li><li><h4 id="使用arange创建数字序列" tabindex="-1"><a class="header-anchor" href="#使用arange创建数字序列" aria-hidden="true">#</a> 使用arange创建数字序列</h4></li><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012135918.png" alt="iShot_2022-10-01_21.35.05" style="zoom:50%;"></li><li><h4 id="使用random模块生成随机数的数组" tabindex="-1"><a class="header-anchor" href="#使用random模块生成随机数的数组" aria-hidden="true">#</a> 使用random模块生成随机数的数组</h4></li><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012136140.png" alt="iShot_2022-10-01_21.35.22" style="zoom:50%;"></li></ul><h3 id="通用函数" tabindex="-1"><a class="header-anchor" href="#通用函数" aria-hidden="true">#</a> 通用函数</h3><h2 id="按索引查询" tabindex="-1"><a class="header-anchor" href="#按索引查询" aria-hidden="true">#</a> 按索引查询</h2><p>关于数组切片有一点很重要也非常有用，那就是<strong>数组切片返回的是数组数据的视图</strong>，而不是数值数据的副本。这一点也是 NumPy 数组切片和 Python 列表切片的不同之处：numpy <u>切片的修改会修改原来的数组</u></p><p>尽管数组视图有一些非常好的特性，但是在有些时候明确地复制数组里的数据或子数组也是非常有用的。可以很简单地通过 <code>copy()</code> 方法实现</p><h3 id="_1-基础索引-常规数组索引的操作" tabindex="-1"><a class="header-anchor" href="#_1-基础索引-常规数组索引的操作" aria-hidden="true">#</a> 1. 基础索引 ---- 常规数组索引的操作</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012146606.png" alt="iShot_2022-10-01_21.45.13" style="zoom:50%;"></li></ul><h3 id="_2-神奇索引-用整数数组进行的索引" tabindex="-1"><a class="header-anchor" href="#_2-神奇索引-用整数数组进行的索引" aria-hidden="true">#</a> 2. 神奇索引 ---- 用整数数组进行的索引</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012155699.png" alt="iShot_2022-10-01_21.54.48" style="zoom:50%;"></li></ul><h3 id="_3-布尔索引" tabindex="-1"><a class="header-anchor" href="#_3-布尔索引" aria-hidden="true">#</a> 3. 布尔索引</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012205113.png" alt="iShot_2022-10-01_22.03.45" style="zoom:50%;"></li><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012205817.png" alt="iShot_2022-10-01_22.04.02" style="zoom:50%;"></li></ul><h3 id="数组拼接与分裂" tabindex="-1"><a class="header-anchor" href="#数组拼接与分裂" aria-hidden="true">#</a> 数组拼接与分裂</h3><p>拼接或连接 NumPy 中的两个数组主要由 <code>np.concatenate</code>、<code>np.vstack</code> 和 <code>np.hstack</code> 例程实现。</p><h3 id="random-随机函数" tabindex="-1"><a class="header-anchor" href="#random-随机函数" aria-hidden="true">#</a> random 随机函数</h3><ul><li><p>官方文档地址：https://docs.scipy.org/doc/numpy-1.14.0/reference/routines.random.html</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012211223.png" alt="numpy_random_functions" loading="lazy"></p></li></ul><h2 id="数学统计函数" tabindex="-1"><a class="header-anchor" href="#数学统计函数" aria-hidden="true">#</a> 数学统计函数</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012216451.png" alt="iShot_2022-10-01_22.16.04" loading="lazy"></li></ul><h3 id="numpy-的-axis-参数的用途" tabindex="-1"><a class="header-anchor" href="#numpy-的-axis-参数的用途" aria-hidden="true">#</a> Numpy 的 axis 参数的用途</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/crush598/image@main/numpy202210012217421.png" alt="iShot_2022-10-01_22.17.32" style="zoom:50%;"></li></ul><h3 id="给数组增加维度" tabindex="-1"><a class="header-anchor" href="#给数组增加维度" aria-hidden="true">#</a> 给数组增加维度</h3><p><em><strong>3种方法：</strong></em></p><ul><li>​ np.newaxis：关键字，使用索引的语法给数组添加维度</li><li>​ np.expand_dims(arr, axis)：方法，和np.newaxis实现一样的功能，给arr在axis位置添加维度</li><li>​ np.reshape(a, newshape)：方法，给一个维度设置为1完成升维</li></ul><h3 id="数组合并操作" tabindex="-1"><a class="header-anchor" href="#数组合并操作" aria-hidden="true">#</a> 数组合并操作</h3><p>以下操作均可以实现数组合并：</p><ul><li>​ np.concatenate(array_list, axis=0/1）：沿着指定axis进行数组的合并</li><li>​ np.vstack或者np.row_stack(array_list)：垂直vertically、按行row wise进行数据合并</li><li>​ np.hstack或者np.column_stack(array_list)：水平horizontally、按列column wise进行数据合并</li></ul>`,34),r=[t];function l(h,c){return n(),e("div",null,r)}const d=a(i,[["render",l],["__file","02. Numpy 小记.html.vue"]]);export{d as default};
